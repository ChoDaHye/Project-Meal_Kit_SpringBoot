<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mealkitspringboot.mapper.BomMapper">
    <parameterMap id="criteriaParam" type="org.mealkitspringboot.domain.CriteriaVo"></parameterMap>
    <!-- 제품명 옵션 검색 -->
    <select id="getProdNmList" resultType="org.mealkitspringboot.domain.BomListVo">
        SELECT
            DISTINCT product_nm as prodNm
        FROM
            Finished_Product
        ORDER BY
            product_nm
    </select>

    <!-- 제품 규격 옵션 검색 -->
    <select id="getProdDivList" resultType="org.mealkitspringboot.domain.BomListVo">
        SELECT
            DISTINCT product_div as prodDiv
        FROM
            Finished_Product
        ORDER BY
            product_div
    </select>

    <!-- 재료명 옵션 검색 -->
    <select id="getMatNmList" resultType="org.mealkitspringboot.domain.BomListVo">
        SELECT
            material_nm as matNm
        FROM
            material
        ORDER BY
            material_nm
    </select>

    <!-- BOM 현황 - 제품 목록 조회 및 검색 -->
    <select id="getList" resultType="org.mealkitspringboot.domain.BomListVo"
            parameterType="org.mealkitspringboot.domain.CriteriaVo">
        <![CDATA[
        SELECT
            ROWNUM as listSeq, T.bomId, T.prodId, T.prodNm, T.prodDiv, T.prodSpec,
            T.lotSize,
            T.matDiv, T.matId, T.matNm,
            T.quantityUnits, T.bomProdQuantity
        FROM (
            SELECT
                b.BOM_ID as bomId, b.PRODUCT_ID as prodId, fp.PRODUCT_NM as prodNm, fp.PRODUCT_DIV as prodDiv, fp.PRODUCT_SPEC as prodSpec,
                i.LOT_SIZE as lotSize,
                m.MATERIAL_CLASSIFICATION as matDiv, b.MATERIAL_ID as matId, m.MATERIAL_NM as matNm,
                b.QUANTITY_UNITS as quantityUnits, b.BOM_PROD_QUANTITY as bomProdQuantity
            FROM
                BOM b, FINISHED_PRODUCT fp, MATERIAL m, INSTRUCTION i
            WHERE
                b.PRODUCT_ID = fp.PRODUCT_ID
                AND b.MATERIAL_ID = m.MATERIAL_ID
                AND b.LOT_ID = i.LOT_ID
        ]]>
                <if test="prodNm != null and prodNm != ''">
                    AND fp.PRODUCT_NM LIKE '%' || #{prodNm} || '%'
                </if>
                <if test="prodDiv != null and prodDiv != ''">
                    AND fp.PRODUCT_DIV LIKE '%' || #{prodDiv} || '%'
                </if>
                <if test="matNm != null and matNm != ''">
                    AND m.MATERIAL_NM LIKE '%' || #{matNm} || '%'
                </if>
                <![CDATA[
            ORDER BY
                b.BOM_ID, b.PRODUCT_ID, m.MATERIAL_CLASSIFICATION
        ) T
        ]]>
    </select>




    <!-- BOM 등록 -->
    <insert id="insert">

    </insert>

    <!-- 현재 스크롤 위치(무한 스크롤) -->
    <select id="readCurrval" resultType="java.lang.Integer">
        select listSeq.currval from dual
    </select>

    <!-- 전체 BOM 개수 조회(무한 스크롤에 사용) -->
    <select id="getCountByListSeq" resultType="int">
        <![CDATA[
            select count(#{listSeq}) from dual
        ]]>
    </select>

    <!-- 체크한 BOM 삭제(여러개의 정보를 한번에 삭제할 수 있어야 함) -->
    <!-- 여러 개의 BOM을 삭제하는 쿼리 -->
    <delete id="delete" parameterType="org.mealkitspringboot.domain.BomListVo">
        DELETE FROM BOM
        WHERE bom_id IN
        <foreach collection="bomIds" item="bomId" open="(" separator="," close=")">
            #{bomId}
        </foreach>
        AND material_id IN
        <foreach collection="matIds" item="matId" open="(" separator="," close=")">
            #{matId}
        </foreach>
    </delete>

    <!-- 1개의 BOM을 삭제하는 쿼리 -->
    <delete id="deleteOne" parameterType="org.mealkitspringboot.domain.BomListVo">
        DELETE FROM BOM
        WHERE bom_id = #{bomId}
        AND material_id = #{matId}
    </delete>

    <!-- BOM 수정 -->
    <update id="update">
        BEGIN
            UPDATE FINISHED_PRODUCT
                SET
                    PRODUCT_DIV = #{inputProdDiv},
                    PRODUCT_SPEC = #{inputProdSpec}
                WHERE
                    PRODUCT_ID = #{prodId}

            UPDATE MATERIAL
                SET
                    MATERIAL_CLASSIFICATION = #{inputMatDiv}
                WHERE
                    MATERIAL_ID = #{matId}

            UPDATE INSTRUCTION
                SET
                    LOT_SIZE = #{inputLotSize}
                WHERE
                    LOT_ID = #{lotId}

            UPDATE BOM
                SET
                    BOM_PROD_QUANTITY = #{inputQuantity},
                    QUANTITY_UNITS = #{inputUnits}
                WHERE
                    BOM_ID = #{bomId}
                AND PRODUCT_ID = #{prodId}
                AND MATERIAL_ID = #{matId}
                AND LOT_ID = #{lotId}

            COMMIT;
        END;

    </update>


</mapper>